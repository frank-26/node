import {obj} from './m1.mjs'
// import {foo,obj} from './m2.mjs'
console.log(obj);
/**
ES6模块的运行机制与CommonJS不一样，它遇到模块加载命令import时，
不会去执行模块，而是只生成一个引用。等到真的需要用到时，再到模块里面去取值。
因此，ES6模块是动态引用，不存在缓存值的问题，而且模块里面的变量，绑定其所在的模块。
这导致ES6处理"循环加载"与CommonJS有本质的不同。ES6根本不会关心是否发生了"循环加载"，
只是生成一个指向被加载模块的引用，需要开发者自己保证，真正取值的时候能够取到值。
 */
